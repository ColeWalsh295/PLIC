Q31_1 ~*~ 1 * Q31_1
Q31_4 ~*~ 1 * Q31_4
Q31_3 ~*~ 1 * Q31_3
Q31_5 ~*~ 1 * Q31_5
'
fit <- cfa(mod.ext, data = df.labs, do.fit = FALSE)
df.CFA <- cbind(df.labs, lavPredict(fit))
df.SEM <- left_join(df.Centered, df.CFA, by = 'Class_ID')
cor(df.SEM[!duplicated(df.SEM$Class_ID), c('agency', 'modeling', 'PurposeSkills', 'PurposeBoth', 'LevelCalc')])
mod.SEM <- '
PostScores ~ PreScores + GenW + URM_StatusURM + MajorEng + MajorPhys + LevelCalc + modeling
# agency ~ PurposeSkills + LevelCalc
modeling ~ PurposeSkills
'
fit <- sem(mod.SEM, df.SEM)
summary(fit, standardized = TRUE, fit.measures = TRUE, modindices = TRUE)
semPaths(fit, whatLabels = 'est')
df.labs <- df.Centered  %>%
filter(!duplicated(Class_ID)) %>%
select(Class_ID, contains('Q29'), contains('Q31'))
df.labs[, 2:ncol(df.labs)] <- data.frame(lapply(df.labs[, 2:ncol(df.labs)], function(x) factor(as.vector(x), levels = c('1', '2', '3', '4', '5'), ordered = TRUE)))
mod.ext <- '
# latent variables
agency =~ 0.800 * Q29_1 + 0.897 * Q29_2 + 0.768 * Q29_3 + 0.800 * Q29_4 + 0.683 * Q29_5 + 0.720 * Q31_6
modeling =~ 0.781 * Q31_2 + 0.842 * Q31_1 + 0.791 * Q31_4 + 0.859 * Q31_3 + 0.563 * Q31_5
# covariances
agency ~~ 0.509 * modeling
# intercepts
Q29_1 ~ 0; Q29_2 ~ 0; Q29_3 ~ 0; Q29_4 ~ 0; Q29_5 ~ 0; Q31_6 ~ 0; Q31_2 ~ 0; Q31_1 ~ 0; Q31_4 ~ 0; Q31_3 ~ 0; Q31_5 ~ 0; agency ~ 0; modeling ~ 0
# thresholds
Q29_1 | -0.731 * t1 + 0.188 * t2 + 1.079 * t3 #+ 1.938 * t4
Q29_2 | -1.003 * t1 + -0.443 * t2 + 0.395 * t3 + 1.355 * t4
Q29_3 | -0.581 * t1 + 0.022 * t2 + 0.899 * t3 + 1.708 * t4
Q29_4 | -1.161 * t1 + -0.581 * t2 + 0.324 * t3 #+ 1.543 * t4
# Q29_5 | -1.871 * t1 + -1.003 * t2 + -0.044 * t3 + 0.950 * t4
Q29_5 |-1.003 * t1 + -0.044 * t2 + 0.950 * t3
Q31_6 | -1.383 * t1 + -0.542 * t2 + 0.431 * t3 + 1.328 * t4
Q31_2 | -1.871 * t1 + -0.835 * t2 + 0.199 * t3 #+ 1.508 * t4
Q31_1 | -1.708 * t1 + -0.702 * t2 + 0.395 * t3 #+ 1.474 * t4
Q31_4 | -1.205 * t1 + -0.278 * t2 + 0.805 * t3 #+ 2.015 * t4
Q31_3 | -1.099 * t1 + 0.011 * t2 + 1.059 * t3 #+ 2.107 * t4
# Q31_5 | -1.871 * t1 + -1.079 * t2 + -0.077 * t3 + 1.205 * t4
Q31_5 | -1.079 * t1 + -0.077 * t2 + 1.205 * t3
# variances
Q29_1 ~~ 0.360 * Q29_1
Q29_2 ~~ 0.196 * Q29_2
Q29_3 ~~ 0.410 * Q29_3
Q29_4 ~~ 0.360 * Q29_4
Q29_5 ~~ 0.533 * Q29_5
Q31_6 ~~ 0.482 * Q31_6
Q31_2 ~~ 0.389 * Q31_2
Q31_1 ~~ 0.291 * Q31_1
Q31_4 ~~ 0.375 * Q31_4
Q31_3 ~~ 0.262 * Q31_3
Q31_5 ~~ 0.683 * Q31_5
agency ~~ 1 * agency
modeling ~~ 1 * modeling
# scaling factors
Q29_1 ~*~ 1 * Q29_1
Q29_2 ~*~ 1 * Q29_2
Q29_3 ~*~ 1 * Q29_3
Q29_4 ~*~ 1 * Q29_4
Q29_5 ~*~ 1 * Q29_5
Q31_6 ~*~ 1 * Q31_6
Q31_2 ~*~ 1 * Q31_2
Q31_1 ~*~ 1 * Q31_1
Q31_4 ~*~ 1 * Q31_4
Q31_3 ~*~ 1 * Q31_3
Q31_5 ~*~ 1 * Q31_5
'
fit <- cfa(mod.ext, data = df.labs, do.fit = FALSE)
df.CFA <- cbind(df.labs, lavPredict(fit))
df.SEM <- left_join(df.Centered, df.CFA, by = 'Class_ID')
cor(df.SEM[!duplicated(df.SEM$Class_ID), c('agency', 'modeling', 'PurposeSkills', 'PurposeBoth', 'LevelCalc')])
mod.SEM <- '
PostScores ~ PreScores + GenW + URM_StatusURM + MajorEng + MajorPhys + LevelCalc + modeling
# agency ~ PurposeSkills + LevelCalc
modeling ~ PurposeBoth
'
fit <- sem(mod.SEM, df.SEM)
summary(fit, standardized = TRUE, fit.measures = TRUE, modindices = TRUE)
semPaths(fit, whatLabels = 'est')
df.labs <- df.Centered  %>%
filter(!duplicated(Class_ID)) %>%
select(Class_ID, contains('Q29'), contains('Q31'))
df.labs[, 2:ncol(df.labs)] <- data.frame(lapply(df.labs[, 2:ncol(df.labs)], function(x) factor(as.vector(x), levels = c('1', '2', '3', '4', '5'), ordered = TRUE)))
mod.ext <- '
# latent variables
agency =~ 0.800 * Q29_1 + 0.897 * Q29_2 + 0.768 * Q29_3 + 0.800 * Q29_4 + 0.683 * Q29_5 + 0.720 * Q31_6
modeling =~ 0.781 * Q31_2 + 0.842 * Q31_1 + 0.791 * Q31_4 + 0.859 * Q31_3 + 0.563 * Q31_5
# covariances
agency ~~ 0.509 * modeling
# intercepts
Q29_1 ~ 0; Q29_2 ~ 0; Q29_3 ~ 0; Q29_4 ~ 0; Q29_5 ~ 0; Q31_6 ~ 0; Q31_2 ~ 0; Q31_1 ~ 0; Q31_4 ~ 0; Q31_3 ~ 0; Q31_5 ~ 0; agency ~ 0; modeling ~ 0
# thresholds
Q29_1 | -0.731 * t1 + 0.188 * t2 + 1.079 * t3 #+ 1.938 * t4
Q29_2 | -1.003 * t1 + -0.443 * t2 + 0.395 * t3 + 1.355 * t4
Q29_3 | -0.581 * t1 + 0.022 * t2 + 0.899 * t3 + 1.708 * t4
Q29_4 | -1.161 * t1 + -0.581 * t2 + 0.324 * t3 #+ 1.543 * t4
# Q29_5 | -1.871 * t1 + -1.003 * t2 + -0.044 * t3 + 0.950 * t4
Q29_5 |-1.003 * t1 + -0.044 * t2 + 0.950 * t3
Q31_6 | -1.383 * t1 + -0.542 * t2 + 0.431 * t3 + 1.328 * t4
Q31_2 | -1.871 * t1 + -0.835 * t2 + 0.199 * t3 #+ 1.508 * t4
Q31_1 | -1.708 * t1 + -0.702 * t2 + 0.395 * t3 #+ 1.474 * t4
Q31_4 | -1.205 * t1 + -0.278 * t2 + 0.805 * t3 #+ 2.015 * t4
Q31_3 | -1.099 * t1 + 0.011 * t2 + 1.059 * t3 #+ 2.107 * t4
# Q31_5 | -1.871 * t1 + -1.079 * t2 + -0.077 * t3 + 1.205 * t4
Q31_5 | -1.079 * t1 + -0.077 * t2 + 1.205 * t3
# variances
Q29_1 ~~ 0.360 * Q29_1
Q29_2 ~~ 0.196 * Q29_2
Q29_3 ~~ 0.410 * Q29_3
Q29_4 ~~ 0.360 * Q29_4
Q29_5 ~~ 0.533 * Q29_5
Q31_6 ~~ 0.482 * Q31_6
Q31_2 ~~ 0.389 * Q31_2
Q31_1 ~~ 0.291 * Q31_1
Q31_4 ~~ 0.375 * Q31_4
Q31_3 ~~ 0.262 * Q31_3
Q31_5 ~~ 0.683 * Q31_5
agency ~~ 1 * agency
modeling ~~ 1 * modeling
# scaling factors
Q29_1 ~*~ 1 * Q29_1
Q29_2 ~*~ 1 * Q29_2
Q29_3 ~*~ 1 * Q29_3
Q29_4 ~*~ 1 * Q29_4
Q29_5 ~*~ 1 * Q29_5
Q31_6 ~*~ 1 * Q31_6
Q31_2 ~*~ 1 * Q31_2
Q31_1 ~*~ 1 * Q31_1
Q31_4 ~*~ 1 * Q31_4
Q31_3 ~*~ 1 * Q31_3
Q31_5 ~*~ 1 * Q31_5
'
fit <- cfa(mod.ext, data = df.labs, do.fit = FALSE)
df.CFA <- cbind(df.labs, lavPredict(fit))
df.SEM <- left_join(df.Centered, df.CFA, by = 'Class_ID')
cor(df.SEM[!duplicated(df.SEM$Class_ID), c('agency', 'modeling', 'PurposeSkills', 'PurposeBoth', 'LevelCalc')])
mod.SEM <- '
PostScores ~ PreScores + GenW + URM_StatusURM + MajorEng + MajorPhys + PurposeBoth + LevelCalc + modeling
# agency ~ PurposeSkills + LevelCalc
modeling ~ PurposeBoth
'
fit <- sem(mod.SEM, df.SEM)
summary(fit, standardized = TRUE, fit.measures = TRUE, modindices = TRUE)
semPaths(fit, whatLabels = 'est')
df.labs <- df.Centered  %>%
filter(!duplicated(Class_ID)) %>%
select(Class_ID, contains('Q29'), contains('Q31'))
df.labs[, 2:ncol(df.labs)] <- data.frame(lapply(df.labs[, 2:ncol(df.labs)], function(x) factor(as.vector(x), levels = c('1', '2', '3', '4', '5'), ordered = TRUE)))
mod.ext <- '
# latent variables
agency =~ 0.800 * Q29_1 + 0.897 * Q29_2 + 0.768 * Q29_3 + 0.800 * Q29_4 + 0.683 * Q29_5 + 0.720 * Q31_6
modeling =~ 0.781 * Q31_2 + 0.842 * Q31_1 + 0.791 * Q31_4 + 0.859 * Q31_3 + 0.563 * Q31_5
# covariances
agency ~~ 0.509 * modeling
# intercepts
Q29_1 ~ 0; Q29_2 ~ 0; Q29_3 ~ 0; Q29_4 ~ 0; Q29_5 ~ 0; Q31_6 ~ 0; Q31_2 ~ 0; Q31_1 ~ 0; Q31_4 ~ 0; Q31_3 ~ 0; Q31_5 ~ 0; agency ~ 0; modeling ~ 0
# thresholds
Q29_1 | -0.731 * t1 + 0.188 * t2 + 1.079 * t3 #+ 1.938 * t4
Q29_2 | -1.003 * t1 + -0.443 * t2 + 0.395 * t3 + 1.355 * t4
Q29_3 | -0.581 * t1 + 0.022 * t2 + 0.899 * t3 + 1.708 * t4
Q29_4 | -1.161 * t1 + -0.581 * t2 + 0.324 * t3 #+ 1.543 * t4
# Q29_5 | -1.871 * t1 + -1.003 * t2 + -0.044 * t3 + 0.950 * t4
Q29_5 |-1.003 * t1 + -0.044 * t2 + 0.950 * t3
Q31_6 | -1.383 * t1 + -0.542 * t2 + 0.431 * t3 + 1.328 * t4
Q31_2 | -1.871 * t1 + -0.835 * t2 + 0.199 * t3 #+ 1.508 * t4
Q31_1 | -1.708 * t1 + -0.702 * t2 + 0.395 * t3 #+ 1.474 * t4
Q31_4 | -1.205 * t1 + -0.278 * t2 + 0.805 * t3 #+ 2.015 * t4
Q31_3 | -1.099 * t1 + 0.011 * t2 + 1.059 * t3 #+ 2.107 * t4
# Q31_5 | -1.871 * t1 + -1.079 * t2 + -0.077 * t3 + 1.205 * t4
Q31_5 | -1.079 * t1 + -0.077 * t2 + 1.205 * t3
# variances
Q29_1 ~~ 0.360 * Q29_1
Q29_2 ~~ 0.196 * Q29_2
Q29_3 ~~ 0.410 * Q29_3
Q29_4 ~~ 0.360 * Q29_4
Q29_5 ~~ 0.533 * Q29_5
Q31_6 ~~ 0.482 * Q31_6
Q31_2 ~~ 0.389 * Q31_2
Q31_1 ~~ 0.291 * Q31_1
Q31_4 ~~ 0.375 * Q31_4
Q31_3 ~~ 0.262 * Q31_3
Q31_5 ~~ 0.683 * Q31_5
agency ~~ 1 * agency
modeling ~~ 1 * modeling
# scaling factors
Q29_1 ~*~ 1 * Q29_1
Q29_2 ~*~ 1 * Q29_2
Q29_3 ~*~ 1 * Q29_3
Q29_4 ~*~ 1 * Q29_4
Q29_5 ~*~ 1 * Q29_5
Q31_6 ~*~ 1 * Q31_6
Q31_2 ~*~ 1 * Q31_2
Q31_1 ~*~ 1 * Q31_1
Q31_4 ~*~ 1 * Q31_4
Q31_3 ~*~ 1 * Q31_3
Q31_5 ~*~ 1 * Q31_5
'
fit <- cfa(mod.ext, data = df.labs, do.fit = FALSE)
df.CFA <- cbind(df.labs, lavPredict(fit))
df.SEM <- left_join(df.Centered, df.CFA, by = 'Class_ID')
cor(df.SEM[!duplicated(df.SEM$Class_ID), c('agency', 'modeling', 'PurposeSkills', 'PurposeBoth', 'LevelCalc')])
mod.SEM <- '
PostScores ~ PreScores + GenW + URM_StatusURM + MajorEng + MajorPhys + LevelCalc + agency + modeling
agency ~ LevelCalc
modeling ~ LevelCalc
'
fit <- sem(mod.SEM, df.SEM, group = 'Lab_Purpose')
summary(fit, standardized = TRUE, fit.measures = TRUE, modindices = TRUE)
semPaths(fit, whatLabels = 'est')
library(broom.mixed)
library(tidyverse)
library(data.table)
source('C:/Users/Cole/Documents/GitHub/PLIC/Process-Merge-Concat/PLIC_DataProcessing.R')
library(effsize)
library(lsr)
library(lme4)
library(lmerTest)
library(MuMIn)
library(stargazer)
library(lavaan)
library(semPlot)
library(sjPlot)
library(taRifx)
library(rstatix)
library(corrgram)
df <- fread('C:/Users/Cole/Documents/PLIC_DATA/Collective_Surveys/Complete/Complete_Concat.csv') %>%
Clean.PLIC(., Matched = TRUE, Collapse.vars = FALSE) %>%
Merge.CIS(., Matched = TRUE) %>%
filter((Lab_Level == 'Intro-Algebra') | (Lab_Level == 'Intro-Calculus'))
df %>%
summarize(N.Students = nrow(.), N.Classes = length(unique(.[, 'Class_ID'])), N.Schools = length(unique(.[, 'School'])))
# unique(df$School)
# Gender non-binaries?
table(df$Gender, exclude = NULL)
df <- fread('C:/Users/Cole/Documents/PLIC_DATA/Collective_Surveys/Complete/Complete_Concat.csv') %>%
Clean.PLIC(., Matched = TRUE) %>%
Merge.CIS(., Matched = TRUE) %>%
filter(Survey_x == 'C' | Survey_y == 'C') %>%
filter((Lab_Level == 'Intro-Algebra') | (Lab_Level == 'Intro-Calculus'))
df %>%
summarize(N.Students = nrow(.), N.Classes = length(unique(.[, 'Class_ID'])), N.Schools = length(unique(.[, 'School'])))
# Filter by student demographics
df <- df %>%
filter(!is.na(Gender) & !is.na(Ethnicity) & !is.na(Major))
df %>%
summarize(N.Students = nrow(.), N.Classes = length(unique(.[, 'Class_ID'])), N.Schools = length(unique(.[, 'School'])))
df <- data.table(df)[, `:=`(N.students = .N, pre.rate = sum(Survey_x == 'C')/.N,
post.rate = sum(Survey_y == 'C')/.N),
.(Class_ID)]
data.frame(df[pre.rate == 0]) %>%
summarize(N.Classes = length(unique(.[, 'Class_ID'])))
# df[post.rate == 0 & !duplicated(Class_ID)]$Class_ID
data.frame(df[post.rate == 0]) %>%
summarize(N.Classes = length(unique(.[, 'Class_ID'])))
df <- df[pre.rate >= 0.4 & post.rate >= 0.4]
data.frame(df) %>%
summarize(N.Students = nrow(.), N.Classes = length(unique(.[, 'Class_ID'])), N.Schools = length(unique(.[, 'School'])))
df <- df[Survey_x == 'C' & Survey_y == 'C']
data.frame(df) %>%
summarize(N.Students = nrow(.), N.Classes = length(unique(.[, 'Class_ID'])), N.Schools = length(unique(.[, 'School'])))
table(df[!duplicated(df$School),]$Institution_Type, exclude = NULL)
table(df[!duplicated(df$Class_ID),]$Lab_Level, exclude = NULL)
table(df[!duplicated(df$Class_ID),]$Lab_Purpose, exclude = NULL)
df <- df %>%
mutate(Gender = relevel(as.factor(Gender), ref = 'Men'),
URM_Status = relevel(as.factor(URM_Status), ref = 'Majority'),
Major = relevel(as.factor(Major), ref = 'Other'),
Lab_Level = relevel(as.factor(Lab_Level), ref = 'Intro-Algebra'),
Lab_Purpose = relevel(as.factor(Lab_Purpose), ref = 'Reinforce physics concepts'))
df.Centered <- Create.Class.Variables(df)
df.Centered$GenW <- df.Centered$Gender == 'Women'
df.Centered$URM_StatusURM <- df.Centered$URM_Status == 'URM'
df.Centered$MajorEng <- df.Centered$Major == 'Engineering'
df.Centered$MajorPhys <- df.Centered$Major == 'Physics'
df.Centered$PurposeSkills <- df.Centered$Lab_Purpose == 'Develop lab skills'
df.Centered$PurposeBoth <- df.Centered$Lab_Purpose == 'Both about equally'
df.Centered$LevelCalc <- df.Centered$Lab_Level == 'Intro-Calculus'
df.labs <- df.Centered  %>%
filter(!duplicated(Class_ID)) %>%
select(Class_ID, contains('Q29'), contains('Q31'))
df.labs[, 2:ncol(df.labs)] <- data.frame(lapply(df.labs[, 2:ncol(df.labs)], function(x) factor(as.vector(x), levels = c('1', '2', '3', '4', '5'), ordered = TRUE)))
mod.ext <- '
# latent variables
agency =~ 0.800 * Q29_1 + 0.897 * Q29_2 + 0.768 * Q29_3 + 0.800 * Q29_4 + 0.683 * Q29_5 + 0.720 * Q31_6
modeling =~ 0.781 * Q31_2 + 0.842 * Q31_1 + 0.791 * Q31_4 + 0.859 * Q31_3 + 0.563 * Q31_5
# covariances
agency ~~ 0.509 * modeling
# intercepts
Q29_1 ~ 0; Q29_2 ~ 0; Q29_3 ~ 0; Q29_4 ~ 0; Q29_5 ~ 0; Q31_6 ~ 0; Q31_2 ~ 0; Q31_1 ~ 0; Q31_4 ~ 0; Q31_3 ~ 0; Q31_5 ~ 0; agency ~ 0; modeling ~ 0
# thresholds
Q29_1 | -0.731 * t1 + 0.188 * t2 + 1.079 * t3 #+ 1.938 * t4
Q29_2 | -1.003 * t1 + -0.443 * t2 + 0.395 * t3 + 1.355 * t4
Q29_3 | -0.581 * t1 + 0.022 * t2 + 0.899 * t3 + 1.708 * t4
Q29_4 | -1.161 * t1 + -0.581 * t2 + 0.324 * t3 #+ 1.543 * t4
# Q29_5 | -1.871 * t1 + -1.003 * t2 + -0.044 * t3 + 0.950 * t4
Q29_5 |-1.003 * t1 + -0.044 * t2 + 0.950 * t3
Q31_6 | -1.383 * t1 + -0.542 * t2 + 0.431 * t3 + 1.328 * t4
Q31_2 | -1.871 * t1 + -0.835 * t2 + 0.199 * t3 #+ 1.508 * t4
Q31_1 | -1.708 * t1 + -0.702 * t2 + 0.395 * t3 #+ 1.474 * t4
Q31_4 | -1.205 * t1 + -0.278 * t2 + 0.805 * t3 #+ 2.015 * t4
Q31_3 | -1.099 * t1 + 0.011 * t2 + 1.059 * t3 #+ 2.107 * t4
# Q31_5 | -1.871 * t1 + -1.079 * t2 + -0.077 * t3 + 1.205 * t4
Q31_5 | -1.079 * t1 + -0.077 * t2 + 1.205 * t3
# variances
Q29_1 ~~ 0.360 * Q29_1
Q29_2 ~~ 0.196 * Q29_2
Q29_3 ~~ 0.410 * Q29_3
Q29_4 ~~ 0.360 * Q29_4
Q29_5 ~~ 0.533 * Q29_5
Q31_6 ~~ 0.482 * Q31_6
Q31_2 ~~ 0.389 * Q31_2
Q31_1 ~~ 0.291 * Q31_1
Q31_4 ~~ 0.375 * Q31_4
Q31_3 ~~ 0.262 * Q31_3
Q31_5 ~~ 0.683 * Q31_5
agency ~~ 1 * agency
modeling ~~ 1 * modeling
# scaling factors
Q29_1 ~*~ 1 * Q29_1
Q29_2 ~*~ 1 * Q29_2
Q29_3 ~*~ 1 * Q29_3
Q29_4 ~*~ 1 * Q29_4
Q29_5 ~*~ 1 * Q29_5
Q31_6 ~*~ 1 * Q31_6
Q31_2 ~*~ 1 * Q31_2
Q31_1 ~*~ 1 * Q31_1
Q31_4 ~*~ 1 * Q31_4
Q31_3 ~*~ 1 * Q31_3
Q31_5 ~*~ 1 * Q31_5
'
fit <- cfa(mod.ext, data = df.labs, do.fit = FALSE)
df.CFA <- cbind(df.labs, lavPredict(fit))
df.SEM <- left_join(df.Centered, df.CFA, by = 'Class_ID')
cor(df.SEM[!duplicated(df.SEM$Class_ID), c('agency', 'modeling', 'PurposeSkills', 'PurposeBoth', 'LevelCalc')])
mod.SEM <- '
PostScores ~ PreScores + GenW + URM_StatusURM + MajorEng + MajorPhys + PurposeSkills + LevelCalc + agency + modeling
agency ~ PurposeSkills + LevelCalc
modeling ~ PurposeSkills + LevelCalc
'
fit <- sem(mod.SEM, df.SEM)
summary(fit, standardized = TRUE, fit.measures = TRUE, modindices = TRUE)
semPaths(fit, whatLabels = 'est')
library(broom.mixed)
library(tidyverse)
library(data.table)
source('C:/Users/Cole/Documents/GitHub/PLIC/Process-Merge-Concat/PLIC_DataProcessing.R')
library(effsize)
library(lsr)
library(lme4)
library(lmerTest)
library(MuMIn)
library(stargazer)
library(lavaan)
library(semPlot)
library(sjPlot)
library(taRifx)
library(rstatix)
library(corrgram)
df <- fread('C:/Users/Cole/Documents/PLIC_DATA/Collective_Surveys/Complete/Complete_Concat.csv') %>%
Clean.PLIC(., Matched = TRUE, Collapse.vars = FALSE) %>%
Merge.CIS(., Matched = TRUE) %>%
filter((Lab_Level == 'Intro-Algebra') | (Lab_Level == 'Intro-Calculus'))
df %>%
summarize(N.Students = nrow(.), N.Classes = length(unique(.[, 'Class_ID'])), N.Schools = length(unique(.[, 'School'])))
# unique(df$School)
# Gender non-binaries?
table(df$Gender, exclude = NULL)
df <- fread('C:/Users/Cole/Documents/PLIC_DATA/Collective_Surveys/Complete/Complete_Concat.csv') %>%
Clean.PLIC(., Matched = TRUE) %>%
Merge.CIS(., Matched = TRUE) %>%
filter(Survey_x == 'C' | Survey_y == 'C') %>%
filter((Lab_Level == 'Intro-Algebra') | (Lab_Level == 'Intro-Calculus'))
df %>%
summarize(N.Students = nrow(.), N.Classes = length(unique(.[, 'Class_ID'])), N.Schools = length(unique(.[, 'School'])))
# Filter by student demographics
df <- df %>%
filter(!is.na(Gender) & !is.na(Ethnicity) & !is.na(Major))
df %>%
summarize(N.Students = nrow(.), N.Classes = length(unique(.[, 'Class_ID'])), N.Schools = length(unique(.[, 'School'])))
df <- data.table(df)[, `:=`(N.students = .N, pre.rate = sum(Survey_x == 'C')/.N,
post.rate = sum(Survey_y == 'C')/.N),
.(Class_ID)]
data.frame(df[pre.rate == 0]) %>%
summarize(N.Classes = length(unique(.[, 'Class_ID'])))
# df[post.rate == 0 & !duplicated(Class_ID)]$Class_ID
data.frame(df[post.rate == 0]) %>%
summarize(N.Classes = length(unique(.[, 'Class_ID'])))
df <- df[pre.rate >= 0.4 & post.rate >= 0.4]
data.frame(df) %>%
summarize(N.Students = nrow(.), N.Classes = length(unique(.[, 'Class_ID'])), N.Schools = length(unique(.[, 'School'])))
df <- df[Survey_x == 'C' & Survey_y == 'C']
data.frame(df) %>%
summarize(N.Students = nrow(.), N.Classes = length(unique(.[, 'Class_ID'])), N.Schools = length(unique(.[, 'School'])))
table(df[!duplicated(df$School),]$Institution_Type, exclude = NULL)
table(df[!duplicated(df$Class_ID),]$Lab_Level, exclude = NULL)
table(df[!duplicated(df$Class_ID),]$Lab_Purpose, exclude = NULL)
df <- df %>%
mutate(Gender = relevel(as.factor(Gender), ref = 'Men'),
URM_Status = relevel(as.factor(URM_Status), ref = 'Majority'),
Major = relevel(as.factor(Major), ref = 'Other'),
Lab_Level = relevel(as.factor(Lab_Level), ref = 'Intro-Algebra'),
Lab_Purpose = relevel(as.factor(Lab_Purpose), ref = 'Reinforce physics concepts'))
df.Centered <- Create.Class.Variables(df)
df.Centered$GenW <- df.Centered$Gender == 'Women'
df.Centered$GenNon <- df.Centered$Gender == 'Non-binary'
df.Centered$URM_StatusURM <- df.Centered$URM_Status == 'URM'
df.Centered$MajorEng <- df.Centered$Major == 'Engineering'
df.Centered$MajorPhys <- df.Centered$Major == 'Physics'
df.Centered$PurposeSkills <- df.Centered$Lab_Purpose == 'Develop lab skills'
df.Centered$PurposeBoth <- df.Centered$Lab_Purpose == 'Both about equally'
df.Centered$LevelCalc <- df.Centered$Lab_Level == 'Intro-Calculus'
mod.null <- lmer(PostScores ~ (1 | School/Class_ID), df.Centered)
summary(mod.null)
r.squaredGLMM(mod.null)
mod.main <- lmer(PostScores ~ PreScores.cwc + PreScores.cmc + Gender + URM_Status + Major + Lab_Purpose + Lab_Level + (1 | School/Class_ID), df.Centered)
summary(mod.main)
r.squaredGLMM(mod.main)
mod.interaction <- lmer(PostScores ~ PreScores.cwc + PreScores.cmc + (Gender + URM_Status) * Lab_Purpose + Major + Lab_Level + (1 | School/Class_ID), df.Centered)
summary(mod.interaction)
r.squaredGLMM(mod.interaction)
class(mod.null) <- "lmerMod"
class(mod.main) <- "lmerMod"
class(mod.interaction) <- "lmerMod"
stargazer(mod.null, mod.main, mod.interaction, star.cutoffs = c(0.05, 0.01, 0.001), intercept.bottom = FALSE, out = 'Results.tex', intercept.top = TRUE, omit.stat = 'all')
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('URM_Status', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
p2[1, 2]
p2[2]
p2
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender[1]', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender[1]', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender[1:2]', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender'[1], 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender'[1:2], 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender'c(1), 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender [1, 3]', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender [1,3]', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender[1,3]', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender[1,3]', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('GenderMen', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender [Men]', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
set_theme(base = theme_classic(base_size = 12))
p1 <- plot_model(mod.interaction, type = 'eff', terms = c('Gender [Men, Women]', 'Lab_Purpose'), dot.size = 4, line.size = 1, ci.lvl = 0.67, title = '', axis.title = 'Predicted posttest scores', colors = c('#e69f00', '#009e74', '#0071b2'), dodge = 0.5) +
theme(legend.position = 'right')
p2 <- p1
p2$data$group <- factor(p2$data$group, levels = c("Reinforce physics concepts", "Both about equally", "Develop lab skills"))
p2
